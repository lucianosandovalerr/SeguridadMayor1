#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SegMayor
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SeguridadMayor")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAsistencia(Asistencia instance);
    partial void UpdateAsistencia(Asistencia instance);
    partial void DeleteAsistencia(Asistencia instance);
    partial void InsertTrabajador(Trabajador instance);
    partial void UpdateTrabajador(Trabajador instance);
    partial void DeleteTrabajador(Trabajador instance);
    partial void InsertHoras(Horas instance);
    partial void UpdateHoras(Horas instance);
    partial void DeleteHoras(Horas instance);
    partial void InsertPagos(Pagos instance);
    partial void UpdatePagos(Pagos instance);
    partial void DeletePagos(Pagos instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::SegMayor.Properties.Settings.Default.segMayorConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Asistencia> Asistencia
		{
			get
			{
				return this.GetTable<Asistencia>();
			}
		}
		
		public System.Data.Linq.Table<Trabajador> Trabajador
		{
			get
			{
				return this.GetTable<Trabajador>();
			}
		}
		
		public System.Data.Linq.Table<diasFeriados> diasFeriados
		{
			get
			{
				return this.GetTable<diasFeriados>();
			}
		}
		
		public System.Data.Linq.Table<Horas> Horas
		{
			get
			{
				return this.GetTable<Horas>();
			}
		}
		
		public System.Data.Linq.Table<Pagos> Pagos
		{
			get
			{
				return this.GetTable<Pagos>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Asistencia")]
	public partial class Asistencia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_asistencia;
		
		private System.Nullable<short> _Rol;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<System.TimeSpan> _HoraEntrada;
		
		private System.Nullable<int> _HorasColacion;
		
		private System.Nullable<System.TimeSpan> _HoraSalida;
		
		private System.Nullable<int> _Turno;
		
		private EntitySet<Horas> _Horas;
		
		private EntitySet<Pagos> _Pagos;
		
		private EntityRef<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_asistenciaChanging(int value);
    partial void OnID_asistenciaChanged();
    partial void OnRolChanging(System.Nullable<short> value);
    partial void OnRolChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnHoraEntradaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraEntradaChanged();
    partial void OnHorasColacionChanging(System.Nullable<int> value);
    partial void OnHorasColacionChanged();
    partial void OnHoraSalidaChanging(System.Nullable<System.TimeSpan> value);
    partial void OnHoraSalidaChanged();
    partial void OnTurnoChanging(System.Nullable<int> value);
    partial void OnTurnoChanged();
    #endregion
		
		public Asistencia()
		{
			this._Horas = new EntitySet<Horas>(new Action<Horas>(this.attach_Horas), new Action<Horas>(this.detach_Horas));
			this._Pagos = new EntitySet<Pagos>(new Action<Pagos>(this.attach_Pagos), new Action<Pagos>(this.detach_Pagos));
			this._Trabajador = default(EntityRef<Trabajador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_asistencia", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_asistencia
		{
			get
			{
				return this._ID_asistencia;
			}
			set
			{
				if ((this._ID_asistencia != value))
				{
					this.OnID_asistenciaChanging(value);
					this.SendPropertyChanging();
					this._ID_asistencia = value;
					this.SendPropertyChanged("ID_asistencia");
					this.OnID_asistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="SmallInt")]
		public System.Nullable<short> Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					if (this._Trabajador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraEntrada", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraEntrada
		{
			get
			{
				return this._HoraEntrada;
			}
			set
			{
				if ((this._HoraEntrada != value))
				{
					this.OnHoraEntradaChanging(value);
					this.SendPropertyChanging();
					this._HoraEntrada = value;
					this.SendPropertyChanged("HoraEntrada");
					this.OnHoraEntradaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HorasColacion", DbType="Int")]
		public System.Nullable<int> HorasColacion
		{
			get
			{
				return this._HorasColacion;
			}
			set
			{
				if ((this._HorasColacion != value))
				{
					this.OnHorasColacionChanging(value);
					this.SendPropertyChanging();
					this._HorasColacion = value;
					this.SendPropertyChanged("HorasColacion");
					this.OnHorasColacionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoraSalida", DbType="Time")]
		public System.Nullable<System.TimeSpan> HoraSalida
		{
			get
			{
				return this._HoraSalida;
			}
			set
			{
				if ((this._HoraSalida != value))
				{
					this.OnHoraSalidaChanging(value);
					this.SendPropertyChanging();
					this._HoraSalida = value;
					this.SendPropertyChanged("HoraSalida");
					this.OnHoraSalidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Turno", DbType="Int")]
		public System.Nullable<int> Turno
		{
			get
			{
				return this._Turno;
			}
			set
			{
				if ((this._Turno != value))
				{
					this.OnTurnoChanging(value);
					this.SendPropertyChanging();
					this._Turno = value;
					this.SendPropertyChanged("Turno");
					this.OnTurnoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_Horas", Storage="_Horas", ThisKey="ID_asistencia", OtherKey="ID_asistencia")]
		public EntitySet<Horas> Horas
		{
			get
			{
				return this._Horas;
			}
			set
			{
				this._Horas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_Pagos", Storage="_Pagos", ThisKey="ID_asistencia", OtherKey="ID_asistencia")]
		public EntitySet<Pagos> Pagos
		{
			get
			{
				return this._Pagos;
			}
			set
			{
				this._Pagos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Asistencia", Storage="_Trabajador", ThisKey="Rol", OtherKey="Rol", IsForeignKey=true)]
		public Trabajador Trabajador
		{
			get
			{
				return this._Trabajador.Entity;
			}
			set
			{
				Trabajador previousValue = this._Trabajador.Entity;
				if (((previousValue != value) 
							|| (this._Trabajador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajador.Entity = null;
						previousValue.Asistencia.Remove(this);
					}
					this._Trabajador.Entity = value;
					if ((value != null))
					{
						value.Asistencia.Add(this);
						this._Rol = value.Rol;
					}
					else
					{
						this._Rol = default(Nullable<short>);
					}
					this.SendPropertyChanged("Trabajador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Horas(Horas entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = this;
		}
		
		private void detach_Horas(Horas entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = null;
		}
		
		private void attach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = this;
		}
		
		private void detach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Asistencia = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Trabajador")]
	public partial class Trabajador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private short _Rol;
		
		private string _Rut;
		
		private string _Nombres;
		
		private string _Apellidos;
		
		private string _Zona;
		
		private EntitySet<Asistencia> _Asistencia;
		
		private EntitySet<Horas> _Horas;
		
		private EntitySet<Pagos> _Pagos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnRolChanging(short value);
    partial void OnRolChanged();
    partial void OnRutChanging(string value);
    partial void OnRutChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidosChanging(string value);
    partial void OnApellidosChanged();
    partial void OnZonaChanging(string value);
    partial void OnZonaChanged();
    #endregion
		
		public Trabajador()
		{
			this._Asistencia = new EntitySet<Asistencia>(new Action<Asistencia>(this.attach_Asistencia), new Action<Asistencia>(this.detach_Asistencia));
			this._Horas = new EntitySet<Horas>(new Action<Horas>(this.attach_Horas), new Action<Horas>(this.detach_Horas));
			this._Pagos = new EntitySet<Pagos>(new Action<Pagos>(this.attach_Pagos), new Action<Pagos>(this.detach_Pagos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rut", DbType="VarChar(50)")]
		public string Rut
		{
			get
			{
				return this._Rut;
			}
			set
			{
				if ((this._Rut != value))
				{
					this.OnRutChanging(value);
					this.SendPropertyChanging();
					this._Rut = value;
					this.SendPropertyChanged("Rut");
					this.OnRutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="VarChar(50)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Apellidos", DbType="VarChar(50)")]
		public string Apellidos
		{
			get
			{
				return this._Apellidos;
			}
			set
			{
				if ((this._Apellidos != value))
				{
					this.OnApellidosChanging(value);
					this.SendPropertyChanging();
					this._Apellidos = value;
					this.SendPropertyChanged("Apellidos");
					this.OnApellidosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zona", DbType="VarChar(50)")]
		public string Zona
		{
			get
			{
				return this._Zona;
			}
			set
			{
				if ((this._Zona != value))
				{
					this.OnZonaChanging(value);
					this.SendPropertyChanging();
					this._Zona = value;
					this.SendPropertyChanged("Zona");
					this.OnZonaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Asistencia", Storage="_Asistencia", ThisKey="Rol", OtherKey="Rol")]
		public EntitySet<Asistencia> Asistencia
		{
			get
			{
				return this._Asistencia;
			}
			set
			{
				this._Asistencia.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Horas", Storage="_Horas", ThisKey="Rol", OtherKey="Rol")]
		public EntitySet<Horas> Horas
		{
			get
			{
				return this._Horas;
			}
			set
			{
				this._Horas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Pagos", Storage="_Pagos", ThisKey="Rol", OtherKey="Rol")]
		public EntitySet<Pagos> Pagos
		{
			get
			{
				return this._Pagos;
			}
			set
			{
				this._Pagos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = this;
		}
		
		private void detach_Asistencia(Asistencia entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = null;
		}
		
		private void attach_Horas(Horas entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = this;
		}
		
		private void detach_Horas(Horas entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = null;
		}
		
		private void attach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = this;
		}
		
		private void detach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Trabajador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.diasFeriados")]
	public partial class diasFeriados
	{
		
		private System.DateTime _dia;
		
		public diasFeriados()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dia", DbType="Date NOT NULL")]
		public System.DateTime dia
		{
			get
			{
				return this._dia;
			}
			set
			{
				if ((this._dia != value))
				{
					this._dia = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Horas")]
	public partial class Horas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_horas;
		
		private System.Nullable<short> _Rol;
		
		private System.Nullable<int> _ID_asistencia;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _cantHoras;
		
		private EntitySet<Pagos> _Pagos;
		
		private EntityRef<Asistencia> _Asistencia;
		
		private EntityRef<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_horasChanging(int value);
    partial void OnID_horasChanged();
    partial void OnRolChanging(System.Nullable<short> value);
    partial void OnRolChanged();
    partial void OnID_asistenciaChanging(System.Nullable<int> value);
    partial void OnID_asistenciaChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OncantHorasChanging(System.Nullable<int> value);
    partial void OncantHorasChanged();
    #endregion
		
		public Horas()
		{
			this._Pagos = new EntitySet<Pagos>(new Action<Pagos>(this.attach_Pagos), new Action<Pagos>(this.detach_Pagos));
			this._Asistencia = default(EntityRef<Asistencia>);
			this._Trabajador = default(EntityRef<Trabajador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_horas", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_horas
		{
			get
			{
				return this._ID_horas;
			}
			set
			{
				if ((this._ID_horas != value))
				{
					this.OnID_horasChanging(value);
					this.SendPropertyChanging();
					this._ID_horas = value;
					this.SendPropertyChanged("ID_horas");
					this.OnID_horasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="SmallInt")]
		public System.Nullable<short> Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					if (this._Trabajador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_asistencia", DbType="Int")]
		public System.Nullable<int> ID_asistencia
		{
			get
			{
				return this._ID_asistencia;
			}
			set
			{
				if ((this._ID_asistencia != value))
				{
					if (this._Asistencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_asistenciaChanging(value);
					this.SendPropertyChanging();
					this._ID_asistencia = value;
					this.SendPropertyChanged("ID_asistencia");
					this.OnID_asistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="Date")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantHoras", DbType="Int")]
		public System.Nullable<int> cantHoras
		{
			get
			{
				return this._cantHoras;
			}
			set
			{
				if ((this._cantHoras != value))
				{
					this.OncantHorasChanging(value);
					this.SendPropertyChanging();
					this._cantHoras = value;
					this.SendPropertyChanged("cantHoras");
					this.OncantHorasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horas_Pagos", Storage="_Pagos", ThisKey="ID_horas", OtherKey="ID_horas")]
		public EntitySet<Pagos> Pagos
		{
			get
			{
				return this._Pagos;
			}
			set
			{
				this._Pagos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_Horas", Storage="_Asistencia", ThisKey="ID_asistencia", OtherKey="ID_asistencia", IsForeignKey=true)]
		public Asistencia Asistencia
		{
			get
			{
				return this._Asistencia.Entity;
			}
			set
			{
				Asistencia previousValue = this._Asistencia.Entity;
				if (((previousValue != value) 
							|| (this._Asistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asistencia.Entity = null;
						previousValue.Horas.Remove(this);
					}
					this._Asistencia.Entity = value;
					if ((value != null))
					{
						value.Horas.Add(this);
						this._ID_asistencia = value.ID_asistencia;
					}
					else
					{
						this._ID_asistencia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Asistencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Horas", Storage="_Trabajador", ThisKey="Rol", OtherKey="Rol", IsForeignKey=true)]
		public Trabajador Trabajador
		{
			get
			{
				return this._Trabajador.Entity;
			}
			set
			{
				Trabajador previousValue = this._Trabajador.Entity;
				if (((previousValue != value) 
							|| (this._Trabajador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajador.Entity = null;
						previousValue.Horas.Remove(this);
					}
					this._Trabajador.Entity = value;
					if ((value != null))
					{
						value.Horas.Add(this);
						this._Rol = value.Rol;
					}
					else
					{
						this._Rol = default(Nullable<short>);
					}
					this.SendPropertyChanged("Trabajador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Horas = this;
		}
		
		private void detach_Pagos(Pagos entity)
		{
			this.SendPropertyChanging();
			entity.Horas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pagos")]
	public partial class Pagos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID_Pagos;
		
		private System.Nullable<int> _cantHoras_Total;
		
		private System.Nullable<bool> _PagoEfec;
		
		private System.Nullable<int> _cant_PagoEfect;
		
		private System.Nullable<byte> _semana;
		
		private System.Nullable<short> _Rol;
		
		private System.Nullable<int> _ID_horas;
		
		private System.Nullable<int> _ID_asistencia;
		
		private EntityRef<Asistencia> _Asistencia;
		
		private EntityRef<Horas> _Horas;
		
		private EntityRef<Trabajador> _Trabajador;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_PagosChanging(int value);
    partial void OnID_PagosChanged();
    partial void OncantHoras_TotalChanging(System.Nullable<int> value);
    partial void OncantHoras_TotalChanged();
    partial void OnPagoEfecChanging(System.Nullable<bool> value);
    partial void OnPagoEfecChanged();
    partial void Oncant_PagoEfectChanging(System.Nullable<int> value);
    partial void Oncant_PagoEfectChanged();
    partial void OnsemanaChanging(System.Nullable<byte> value);
    partial void OnsemanaChanged();
    partial void OnRolChanging(System.Nullable<short> value);
    partial void OnRolChanged();
    partial void OnID_horasChanging(System.Nullable<int> value);
    partial void OnID_horasChanged();
    partial void OnID_asistenciaChanging(System.Nullable<int> value);
    partial void OnID_asistenciaChanged();
    #endregion
		
		public Pagos()
		{
			this._Asistencia = default(EntityRef<Asistencia>);
			this._Horas = default(EntityRef<Horas>);
			this._Trabajador = default(EntityRef<Trabajador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_Pagos", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID_Pagos
		{
			get
			{
				return this._ID_Pagos;
			}
			set
			{
				if ((this._ID_Pagos != value))
				{
					this.OnID_PagosChanging(value);
					this.SendPropertyChanging();
					this._ID_Pagos = value;
					this.SendPropertyChanged("ID_Pagos");
					this.OnID_PagosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cantHoras_Total", DbType="Int")]
		public System.Nullable<int> cantHoras_Total
		{
			get
			{
				return this._cantHoras_Total;
			}
			set
			{
				if ((this._cantHoras_Total != value))
				{
					this.OncantHoras_TotalChanging(value);
					this.SendPropertyChanging();
					this._cantHoras_Total = value;
					this.SendPropertyChanged("cantHoras_Total");
					this.OncantHoras_TotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PagoEfec", DbType="Bit")]
		public System.Nullable<bool> PagoEfec
		{
			get
			{
				return this._PagoEfec;
			}
			set
			{
				if ((this._PagoEfec != value))
				{
					this.OnPagoEfecChanging(value);
					this.SendPropertyChanging();
					this._PagoEfec = value;
					this.SendPropertyChanged("PagoEfec");
					this.OnPagoEfecChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cant_PagoEfect", DbType="Int")]
		public System.Nullable<int> cant_PagoEfect
		{
			get
			{
				return this._cant_PagoEfect;
			}
			set
			{
				if ((this._cant_PagoEfect != value))
				{
					this.Oncant_PagoEfectChanging(value);
					this.SendPropertyChanging();
					this._cant_PagoEfect = value;
					this.SendPropertyChanged("cant_PagoEfect");
					this.Oncant_PagoEfectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semana", DbType="TinyInt")]
		public System.Nullable<byte> semana
		{
			get
			{
				return this._semana;
			}
			set
			{
				if ((this._semana != value))
				{
					this.OnsemanaChanging(value);
					this.SendPropertyChanging();
					this._semana = value;
					this.SendPropertyChanged("semana");
					this.OnsemanaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Rol", DbType="SmallInt")]
		public System.Nullable<short> Rol
		{
			get
			{
				return this._Rol;
			}
			set
			{
				if ((this._Rol != value))
				{
					if (this._Trabajador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRolChanging(value);
					this.SendPropertyChanging();
					this._Rol = value;
					this.SendPropertyChanged("Rol");
					this.OnRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_horas", DbType="Int")]
		public System.Nullable<int> ID_horas
		{
			get
			{
				return this._ID_horas;
			}
			set
			{
				if ((this._ID_horas != value))
				{
					if (this._Horas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_horasChanging(value);
					this.SendPropertyChanging();
					this._ID_horas = value;
					this.SendPropertyChanged("ID_horas");
					this.OnID_horasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_asistencia", DbType="Int")]
		public System.Nullable<int> ID_asistencia
		{
			get
			{
				return this._ID_asistencia;
			}
			set
			{
				if ((this._ID_asistencia != value))
				{
					if (this._Asistencia.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_asistenciaChanging(value);
					this.SendPropertyChanging();
					this._ID_asistencia = value;
					this.SendPropertyChanged("ID_asistencia");
					this.OnID_asistenciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Asistencia_Pagos", Storage="_Asistencia", ThisKey="ID_asistencia", OtherKey="ID_asistencia", IsForeignKey=true)]
		public Asistencia Asistencia
		{
			get
			{
				return this._Asistencia.Entity;
			}
			set
			{
				Asistencia previousValue = this._Asistencia.Entity;
				if (((previousValue != value) 
							|| (this._Asistencia.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Asistencia.Entity = null;
						previousValue.Pagos.Remove(this);
					}
					this._Asistencia.Entity = value;
					if ((value != null))
					{
						value.Pagos.Add(this);
						this._ID_asistencia = value.ID_asistencia;
					}
					else
					{
						this._ID_asistencia = default(Nullable<int>);
					}
					this.SendPropertyChanged("Asistencia");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Horas_Pagos", Storage="_Horas", ThisKey="ID_horas", OtherKey="ID_horas", IsForeignKey=true)]
		public Horas Horas
		{
			get
			{
				return this._Horas.Entity;
			}
			set
			{
				Horas previousValue = this._Horas.Entity;
				if (((previousValue != value) 
							|| (this._Horas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Horas.Entity = null;
						previousValue.Pagos.Remove(this);
					}
					this._Horas.Entity = value;
					if ((value != null))
					{
						value.Pagos.Add(this);
						this._ID_horas = value.ID_horas;
					}
					else
					{
						this._ID_horas = default(Nullable<int>);
					}
					this.SendPropertyChanged("Horas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Trabajador_Pagos", Storage="_Trabajador", ThisKey="Rol", OtherKey="Rol", IsForeignKey=true)]
		public Trabajador Trabajador
		{
			get
			{
				return this._Trabajador.Entity;
			}
			set
			{
				Trabajador previousValue = this._Trabajador.Entity;
				if (((previousValue != value) 
							|| (this._Trabajador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Trabajador.Entity = null;
						previousValue.Pagos.Remove(this);
					}
					this._Trabajador.Entity = value;
					if ((value != null))
					{
						value.Pagos.Add(this);
						this._Rol = value.Rol;
					}
					else
					{
						this._Rol = default(Nullable<short>);
					}
					this.SendPropertyChanged("Trabajador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
